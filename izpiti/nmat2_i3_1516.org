#+TITLE: Izpit iz numerične matematike
#+SUBTITLE: Ljubljana, 16. 6. 2016
#+LANGUAGE: sl
#+LATEX_HEADER: \usepackage[slovene]{babel}

#+LATEX_HEADER: \usepackage{color}

* Prva naloga
:PROPERTIES:
:header-args: :session :exports both :results output
:END:

#+BEGIN_LATEX
V ravnini je krivulja $C$ podana z enačbo
$$(x^2+y^2)^2-2(x^2-y^2)=1.$$
\begin{enumerate}
\item Poišči vse točke na krivulji s koordinato $x=0.5$.
\item Poišči vsa presečišča krivulje $C$ in hiperbole
$$x^2-xy-y^2=1.$$ 
\end{enumerate}
#+END_LATEX

** Rešitev
Da si lažje predstavljamo, najprej krivuljo narišemo z ukazom `contour`
#+BEGIN_SRC octave :results none
x = linspace(-2,2);
y  = linspace(-1,1);
[X,Y] = meshgrid(x,y);
figure( 1, "visible", "off" );
contour(X,Y, (X.^2+Y.^2).^2-2*(X.^2-Y.^2),[1,1],'b')
grid
print -dpng "krivuljaC.png"
#+END_SRC

#+RESULTS:

#+CAPTION: Krivulja $C$

[[file:krivuljaC.png]] 

Vidimo, da sta točki s koordinato $x=0.5$ dve. Koordinata $y$ je rešitev enačbe,
ki jo dobimo, če $x=0.5$ vstavimo v enačbo krivulje 
#+BEGIN_LATEX
  \begin{eqnarray*}
  (x^2+y^2)^2-2(x^2-y^2)&=&1|_{x=0.5}\\
  (0.25+y^2)^2-2(0.25-y^2)&=&1\\
  \end{eqnarray*}
#+END_LATEX
Obe rešitvi lahko poiščemo z eno od metod
za reševanje nelinearnih enačb. Tu bomo uporabili *tangentno metodo*:
#+BEGIN_SRC octave
format long
f = @(y) (0.25 + y^2)^2-2*(0.25-y^2)-1;
df = @(y) 2*(0.25 + y^2)*2*y + 4*y;
y1 = -1;
for i=1:5
  y1 = y1 - f(y1)/df(y1)
end
#+END_SRC

#+RESULTS:
: 
: > > y1 = -0.770833333333333
: y1 = -0.700309552168078
: y1 = -0.694338996684583
: y1 = -0.694298790208768
: y1 = -0.694298788396521
#+BEGIN_SRC octave
y2 = 1;
for i=1:5
  y2 = y2 - f(y2)/df(y2)
end
#+END_SRC

#+RESULTS:
: 
: > > y2 =  0.770833333333333
: y2 =  0.700309552168078
: y2 =  0.694338996684583
: y2 =  0.694298790208768
: y2 =  0.694298788396521
#+BEGIN_SRC octave :results none
hold on
plot([0.5,0.5],[y1,y2],'ro')
print -dpng "krivuljaC_tocke.png"
#+END_SRC
#+CAPTION: Točke na krivulji c z $x=0.5$
[[file:krivuljaC_tocke.png]]

*** Presečiše krivulje C in hiperbole
Narišimo še hiperbolo
#+BEGIN_SRC octave :results none
x = linspace(-2,2);
y  = linspace(-1,1);
[X,Y] = meshgrid(x,y);
figure( 2, "visible", "off" );
contour(X,Y, (X.^2+Y.^2).^2-2*(X.^2-Y.^2),[1,1],'b')
grid
hold on
contour(X,Y, X.^2-X.*Y-Y.^2,[1,1],'r')
print -dpng "krivuljaC_in_hiperbola.png"
#+END_SRC
#+CAPTION: Krivulja $C$ in hiperbola
[[file:krivuljaC_in_hiperbola.png]]
Krivulji imata 4 presečišča, ki jih lahko poiščemo kot rešitve sistema enačb
#+BEGIN_LATEX
  \begin{eqnarray*}
  x^2-xy-y^2&=&1\\ 
  (x^2+y^2)^2-2(x^2-y^2)&=&1.
  \end{eqnarray*}
#+END_LATEX
Zopet lahko uporabimo tangentno metodo.
#+BEGIN_SRC octave
F = @(x,y)  [x^2-x*y-y^2-1; (x^2+y^2)^2-2*(x^2-y^2)-1];
JF = @(x,y) [2*x-y, -2*y-y; 2*(x^2+y^2)*2*x-4*x, 2*(x^2+y^2)*2*y+4*y];
xy = [1;-1];
XY = xy';
for i=1:10
  xy = xy - JF(xy(1),xy(2))\F(xy(1),xy(2));
  XY = [XY;xy'];
end
XY
#+END_SRC

#+RESULTS:
#+begin_example

> > > >> XY =

   1.000000000000000  -1.000000000000000
   0.812500000000000  -0.812500000000000
   0.848408340919436  -0.708985263996359
   0.908945644434683  -0.692194309712894
   0.916124464438256  -0.689418440683320
   0.917634241836431  -0.689121815861298
   0.917796981234154  -0.689091012155289
   0.917814022017620  -0.689087891663280
   0.917815749906834  -0.689087576452288
   0.917815924464424  -0.689087544621826
   0.917815942091686  -0.689087541407643
#+end_example
Ostala presečišča poiščemo tako, da uporabimo druge začetne približke.
#+BEGIN_SRC octave
# 2. tocka
xy2 = [-1;-1];
XY = xy2';
for i=1:10
   xy2 = xy2 - JF(xy2(1),xy2(2))\F(xy2(1),xy2(2));
   XY = [XY; xy2'];
end
XY((end-3):end,:)
# 3. tocka
xy3 = [-1;1];
for i=1:10
   xy3 = xy3 - JF(xy3(1),xy3(2))\F(xy3(1),xy3(2));
   XY = [XY; xy3'];
end
XY((end-3):end,:)
# 4. tocka
xy4 = [1;1];
for i=1:10
   xy4 = xy4 - JF(xy4(1),xy4(2))\F(xy4(1),xy4(2));
   XY = [XY; xy4'];
end
XY((end-3):end,:)
#+END_SRC

#+RESULTS:
#+begin_example

> > > >> ans =

  -1.359721054982997  -0.465128678114521
  -1.359707053302619  -0.465142895739003
  -1.359710517071326  -0.465139376740527
  -1.359709659723895  -0.465140247647315
> > > >> ans =

  -0.917814022017620   0.689087891663280
  -0.917815749906834   0.689087576452288
  -0.917815924464424   0.689087544621826
  -0.917815942091686   0.689087541407643
> > > >> ans =

   1.359721054982997   0.465128678114521
   1.359707053302619   0.465142895739003
   1.359710517071326   0.465139376740527
   1.359709659723895   0.465140247647315
#+end_example
Vse skupaj predstavimo še grafično:
#+BEGIN_SRC octave :results none
plot([xy(1),xy2(1),xy3(1),xy4(1)],[xy(2),xy2(2),xy3(2),xy4(2)],'ro')
print -dpng "krivuljaC_in_hiperbola_presek.png"
#+END_SRC
#+CAPTION: Presečišča krivulje $C$ in hiperbole
[[file:krivuljaC_in_hiperbola_presek.png]]

* Druga naloga

:PROPERTIES:
:header-args: :session :exports both :results output
:END:

#+BEGIN_LATEX
Funkcija $y(t)$ je podana kot rešitev začetnega problema
\[y''(t)+2y'(t)+y(t)=\sin(t),\quad y(0)=2,y'(0)=0.\] 
\begin{enumerate}
\item Z Eulerjevo metodo s korakom $h=0.5$ poiščite približek za $y(1)$.
\item Z metodo po vaši izbiri poiščite približek za $y(3)$ na 5 decimalk natančno.
\item Izračunajte integral
\[\int_0^3y(t)dt\]
na $5$ decimlak natančno.
\end{enumerate}
#+END_LATEX
** Rešitev
:PROPERTIES:
:header-args: :session :exports both :results output
:END:
Najprej enačbo 2. reda prepišemo v sistem enačb 1. reda, tako da vpeljemo novo
spremenljivko $z=y'(t)$. Dobimo sistem enačb
#+BEGIN_LaTeX
\begin{eqnarray*}
 y'(t) &=& z(t)\\
 z'(t) &=& \sin(t)-2z(t)-y(t) 
\end{eqnarray*}
#+END_LaTeX
z začetnim pogojem $y(0)=2$ in $z(0)=0$.
*** Eulerjeva metoda
Narediti moramo dva koraka Eulerjeve metode:
#+BEGIN_LaTeX
\begin{eqnarray*}
 y_1 &=& y_0+h*f(t_0,y_0)\\
y_2 &=& y +h*f(t_0+h,y_1)
\end{eqnarray*}
#+END_LaTeX
#+BEGIN_SRC octave :results output
f = @(t,y,z) [z; sin(t)-2*z-y];
y0 = [2;0];
t0 = 0;
h = 0.5;
y1 = y0 + h*f(t0,y0(1),y0(2))
y2 = y1 + h*f(t0+h,y1(1),y1(2))
#+END_SRC

#+RESULTS:
: 
: y1 =
: 
:    2
:   -1
: y2 =
: 
:    1.500000000000000
:   -0.760287230697898
Približek za $y(1)$ se skriva v prvi komponenti spremenljivke `y2` in je enak $1.5$.
*** Izračun $y(3)$
Uporabili bomo metodo Runge-Kutta 4. reda.
#+BEGIN_SRC octave :results none
fun = @(t,y) f(t,y(1),y(2));
function [y,t] = rk4(f,t0,y0,tk,n)
h = (tk-t0)/n;
y = y0;
t = t0;
for i=1:n
  k1 = h*f(t0,y0); 
  k2 = h*f(t0+h/2,y0+k1/2);
  k3 = h*f(t0+h/2,y0+k2/2);
  k4 = h*f(t0+h, y0+k3);
  y0 = y0 + (k1+2*k2+2*k3+k4)/6;
  t0 = t0+h;
  y = [y y0];
  t = [t t0];
end
endfunction
#+END_SRC
Rešitev poiščemo za dve različni velikosti koraka in ocenimo napako z
Richardsonovo ekstrapolacijo.
#+BEGIN_SRC octave
tk = 3;
n = 20;
[y1,t] = rk4(fun,t0,y0,tk,n);
n = 40;
[y2,t] = rk4(fun,t0,y0,tk,n);
# ocena za napako
napaka = (y1(1,end)-y2(1,end))/(2^4-1)
#+END_SRC

#+RESULTS:
: 
: napaka =    2.17186881819783e-07
Narišimo še graf rešitve.
#+BEGIN_SRC octave :results none
figure( 1, "visible", "off" );
plot(t,y2(1,:),'b')
grid
print -dpng "resitevDE.png"
#+END_SRC
#+CAPTION: Rešitev $y(t)$
[[file:resitevDE.png]]
*** Integral
Integral lahko izračunamo iz že izračunanih približkov za rešitev, tako da
uporabimo npr. Simpsonovo sestavljeno pravilo.
#+BEGIN_SRC octave
h=(tk-t0)/n;
utezi = [1 repmat([4 2],1,n/2-1) 4 1];
I = h/3*sum(utezi.*y2(1,:))
#+END_SRC 

#+RESULTS:
: 
: I =  4.30709978113080

Druga možnost je, da integral enostavno dodamo v diferencialno enačbo. Naj bo
\[w(t) = \int_{t_0}^t y(\tau)d\tau\]
Funkcija $w(t)$ zadošča diferencialni enačbi 
\[w'(t)=y(t)\] in začetnemu pogoju $w(t_0)=0$. Sistem dveh enačb za $y$ in $z$
razširimo s $w$
#+BEGIN_LaTeX
\begin{eqnarray*}
  y'(t) &=& z(t)\\
 z'(t) &=& \sin(t)-2z(t)-y(t)\\
 w'(t) &=& y(t)
\end{eqnarray*}
#+END_LaTeX
in uporabimo metodo RK.
#+BEGIN_SRC octave
funi = @(t,y) [f(t,y(1),y(2));y(1)];
y0 = [2;0;0];
n = 40;
[yi,t] = rk4(funi,t0,y0,tk,n);
I = yi(3,end)
#+END_SRC

#+RESULTS:
: 
: I =  4.30710150580884

