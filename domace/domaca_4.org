#+TITLE: Četrta domača naloga 2015-16
#+SUBTITLE: Numerična matematika
#+LANGUAGE: sl
#+LATEX_HEADER: \usepackage[slovene]{babel}

* Navodila

Nalogo rešite na *10 decimalk* (z relativno natančnostjo $\mathbf{10^{-10}}$). 
Uporabite lahko le osnovne operacije, vgrajene osnovne matematične funkcije
$\exp$, $\sin$, $\cos$ ..., osnovne operacije z matrikami in razcepe matrik. Vse
ostale algoritme morate implementirati sami. Ocena bo odvisna tudi od
*učinkovitosti* vašega algoritma. 


Vsaka datoteka naj vsebuje komentar s pomočjo za funkcijo, teste v obliki 
#+BEGIN_SRC octave
%!test
%! assert ...
#+END_SRC
in predstavitveno kodo funkcije v obliki
#+BEGIN_SRC octave
%!demo
%! # Primer uporabe funkcije
%! y = funkcija(1,2,3) ... 
#+END_SRC
Če uporabljate drug programski jezik, ravno tako kodi dodajte osnovno
dokumentacijo, teste in demo.

* Težje naloge
** Ničle Airyjeve funkcije
Airyjeva funkcija je dana kot rešitev začetnega problema
\[
Ai''(x)-x\,Ai(x)=0,\quad Ai(0)=\frac{1}{3^\frac{2}{3}\Gamma\left(\frac{2}{3}\right)}\,Ai'(0)=-\frac{1}{3^\frac{1}{3}\Gamma\left(\frac{1}{3}\right)}.
\]

Poiščite čim več ničel funkcije \(Ai\) na 10 decimalnih mest natančno. Ni dovoljeno uporabiti vgrajene funkcijo za reševanje diferencialnih enačb. Vgrajeno Airyjevo funkcijo pa lahko uporabite, da preverite ali ste res dobili pravo ničlo
** Dolžina implicinto podane krivulje
Poiščite približek za dolžino krivulje, ki je dana implicitno z enačbama
\begin{align*}
F_1(x,y,z)&=x^4+y^2/2+z^2=12\\
F_2(x,y,z)&=x^2+y^2-4z^2=8.
\end{align*}
Krivuljo lahko poiščete kot rešitev diferencialne enačbe
\[
\dot{\mathbf{x}}(t) = \nabla F_1\times \nabla F_2.
\]
** Perioda limitnega cikla
Poiščite periodo limitnega cikla za diferencialno enačbo
\[x''(t)-4(1-x^2)x'(t)+x=0\]
na 10 decimalk natančno.
*** Rešitev
Poiščemo limitni cikel
#+BEGIN_SRC octave :session
lsode_options("absolute tolerance",1e-14);
fun = @(y,t) [y(2);4*(1-y(1)^2)*y(2)-y(1)];
t=linspace(0,100); Y = lsode(fun,[1;1],t);
Y(end,:)
#+END_SRC

#+RESULTS:
| 1.964136027067184 | -0.1688964692664729 |

Nato poiščemo periodo
#+BEGIN_SRC octave :session
Y0 = Y(end,:);
t0 = 0; tk = 10; 
for i=1:10
  Y = lsode(fun,Y(end,:),[t0,tk]);
  t0 = tk;
  tk = tk - (Y(end,1)-Y0(1,1))/Y(end,2);
end
[tk,norm(Y(end,:)-Y0(1,:))]
#+END_SRC

#+RESULTS:
| 10.2035236909362 | 3.751443600208404e-13 |

* Lažja naloga (ocena največ 9)
Naloga je namenjena tistim, ki jih je strah eksperimentiranja ali pa za to
preprosto nimajo interesa ali časa. 

** Matematično nihalo
Kotni odmik \(\theta(t)\) (v radianih) pri nedušenem nihanju nitnega nihala opišemo z diferencialno enačbo 
\[{g\over l}\sin(\theta(t))+\theta^{\prime\prime}(t)=0, \quad \theta(0)=
\theta_0,\ \theta^{\prime}(0)=\theta^{\prime}_0,\] 
kjer je \(g=9.80665m/s^2\) težni pospešek in \(l\) dolžina nihala. Napišite
funkcijo =nihalo=, ki računa odmik nihala ob določenem času. Enačbo drugega reda
prevedite na sistem prvega reda in računajte z metodo Runge-Kutta četrtega reda:
\[\begin{array}{ccc}  
k_1& = &h\,f(x_n,y_n)\\ 
k_2& = & h\,f(x_n+h/2,y_n+k_1/2)\\ 
k_3& = & h\,f(x_n+h/2,y_n+k_2/2)\\ 
k_4& = & h\,f(x_n+h,y_n+k_3)\\ 
y_{n+1}& = & y_n+(k_1+2k_2+2k_3+k_4)/6. \end{array}\] 

Klic funkcije naj bo oblike =odmik=nihalo(l,t,theta0,dtheta0,n)= 
 - kjer je =odmik= enak odmiku nihala ob času =t=,
 - dolžina nihala je =l=,
 - začetni odmik (odmik ob času \(0\)) je =theta0=
 - in začetna kotna hitrost (\(\theta'(0)\)) je =dtheta0=,
 - interval \([0,t]\) razdelimo na =n= podintervalov enake dolžine.

Primerjajte rešitev z nihanjem harmoničnega nihala. Za razliko od harmoničnega
nihala (sinusno nihanje), je pri matematičnem nihalu nihajni čas odvisen od
začetnih pogojev (energije). Narišite graf, ki predstavlja, kako se nihajni čas
spreminja z energijo nihala.
